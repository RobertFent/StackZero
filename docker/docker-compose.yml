services:
  robotswebsite:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: robotswebsite
    ports:
      - 3000:3000
    environment:
      FORKS: 1
      NODE_ENV: development # todo -> change to production
      PORT: 3000
      DB_LOCATION: ./data/robotswebsite.db
      VIRTUAL_HOST: robertfent.com # nginx config so that robertfent.com routes to this docker service
      VIRTUAL_PORT: 3000
      LETSENCRYPT_EMAIL: info@robertfent.com # tls setup for acme companion to enable https for this docker service
      LETSENCRYPT_HOST: robertfent.com
    volumes:
      - mywebsite:/app/data
    restart: unless-stopped

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:ro # persist and manage TLS certs
      - vhost_data:/etc/nginx/vhost.d # needed for dynamic config overrides
      - html_data:/usr/share/nginx/html # required for ACME HTTP-01 challenge
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-acme
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      # - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory # use this for debugging tls challenge
    volumes:
      - certs:/etc/nginx/certs
      - html_data:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    restart: unless-stopped

volumes:
  mywebsite:
  certs:
  html_data:
  vhost_data:
  acme: